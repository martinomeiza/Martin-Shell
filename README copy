-*- Text -*-

Solution to Assignment 2 (CS 464/564)
by Jibola, Bill and Martin.


Content

o  source code, included in sshell.cc
o  modules tokenize and tcp-utils (note: the
   module tcp-utils is included because of the function `readline')
o  a makefile (the default target builds the executable, there are no
   other targets of interest)
o  a sample configuration file shconfig

Change the makefile and compile with -DDEBUG option for an executable
that prints debugging output to the standard error stream.


User guide and program description

There is now a new syntax for users to input their local commands in the 
command line when the shell is executed. The arguments should now begin
with a "!". We also have these new additions which are local commands:

o  Command "! keepalive" now keeps the connection open for the user to 
	communicate with the server.
o  Command "! close" now closes the open connection.
 
The shell now runs local commands as:
	
	! ls 
	
	! pwd

	! nano

Commands that aren't prefixed with "!" are sent to the server for execution

Remote commands are executed now as:

	HELO    

	GET


A new process is fork-ed for a background command.  The new process
runs then the command as a normal, foreground command and reports
completion.

A typical zombie reaper is set up as signal handler for SIGCHLD.  This
reaper is inhibited temporarily when we actually want to wait for
child completion (in function run_it) by setting an empty function as
SIGCHLD handler in the master process.  As soon as the child responds
we restore the normal handler. (Note: we do need the dummy, empty
handler as the behaviour of setting SIG_IGN as handler for SIGCHLD is
undefined according to the POSIX standard.)


Tests

This particular program is simple enough to allow for an exhaustive
test suite, that contains the following test cases:

o  commands from /bin, /usr/bin, with absolute path, and nonexistent
   commands
o  entering only !
o  all of the above in background
o  more with various arguments (multiple files, unreadable files,
   nonexistent files)
o  error conditions for the configuration, such as unreadable or
   garbled configuration file; in particular, negative terminal
   dimensions were provided in the configuration file
o  special cases for input such as empty commands and EOFs.

Tests show a correctly working program

Known bugs
